import React from 'react';
import {
    View,
    Text,
    FlatList,
    TouchableOpacity,
    StyleSheet,
    Dimensions,
    Alert,
} from 'react-native';

import {StackNavigator} from 'react-navigation';
import MenuButtonWS from '../Components/MenuButtonWS';
import Ionicons from  'react-native-vector-icons/Ionicons';
import { 
    Input,
    ListItem,
    ButtonGroup,
} from 'react-native-elements';
import Icon from 'react-native-vector-icons/FontAwesome';

const numColumns = 3
const WIDTH = Dimensions.get('window').width

export default class Tables2 extends React.Component {

    constructor(props) {
        super(props);
        this.state = {
            waitstaffuserId: '',
            dataSource: [],
        }
        this.updateIndex = this.updateIndex.bind(this)
    }

    updateIndex (selectedIndex) {
        this.setState({selectedIndex})
        this.grabCustomers(selectedIndex)
        this._clearwaitstaffID(selectedIndex)
    }

    handleQueryChange = (waitstaffuserId) => {
        this.setState(state => ({ ...state, waitstaffuserId: waitstaffuserId || " "}));
    }

    _clearwaitstaffID = (index) => {
        if (index === 1) {
            this.handleQueryChange("");
        }
    }


    render() {

        const buttons = ['View', 'Clear']
        const { selectedIndex } = this.state

        return (
            <View style={styles.container}>
                <MenuButtonWS navigation={this.props.navigation} />

                <Input
                    style={styles.textInput} 
                    placeholder='User ID'
                    leftIcon={
                        <Icon
                        name='table' 
                        size={24}
                        color='black'
                        />
                    }
                    rightIcon={
                        <Icon 
                        name='chevron-left'
                        size={15}
                        color='black'
                        onPress={this._clearwaitstaffID}
                        />
                    }
                    onChangeText={ (waitstaffuserId) => this.setState({waitstaffuserId})}
                    value={this.state.waitstaffuserId}
                    underlineColorAndroid='transparent'
                />

                <ButtonGroup 
                onPress={this.updateIndex}
                selectedIndex={selectedIndex}
                selectedButtonStyle={{backgroundColor: 'blue'}}
                buttons={buttons}
                containerStyle={styles.buttonGroup}
                />
   
                <FlatList
                    data={this.state.dataSource}
                    extraData={this.state}
                    keyExtractor={(item, index) => index.toString()}
                    //numColumns={numColumns}
                    renderItem={({item, index}) => (
                        <ListItem
                        titleStyle={{ color: 'black', fontWeight: 'bold'}}
                        title={`${item}`}
                        onPress={() => this._openTable(item)}
                        bottomDivider
                        chevron
                        />
                    )}
                />    
            </View>
        )
    }

    grabCustomers = (index) => {
        if (index === 0) {
            let waitstafftables = {
                waitstaffuserId: this.state.waitstaffuserId,
            };
            
            fetch('URL', {
                method: 'POST',
                body: JSON.stringify(waitstafftables),
                headers: {
                    'Accept': 'application/json',
                    'Content-Type': 'application/json',
                },
            })
                .then((response) => response.json())
                .then((responseJson) => {
                    this.setState({
                        dataSource: responseJson,
                    });
                    console.log(responseJson)
                })
                .catch((error) => {
                    console.log(error);
                });
        }
    }
    GetGridViewItem(uname) {
        Alert.alert(uname);
    }

    _openTable = (item) => {
        
        fetch('URL', {
            method: 'POST',
            body: JSON.stringify({tablenumber: item}),
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json',
            },
        })
            .then((response) => response.text())
            .then((responseJson) => {
                this.setState({
                    dataSource: responseJson,
                });
                console.log(responseJson)
                alert(responseJson)
                this.props.navigation.navigate('ViewParty', {
                    party: responseJson,
                    otherParam: '101',
                });
            })
            .catch((error) => {
                console.log(error);
            });
    }
    GetGridViewItem(uname) {
        Alert.alert(uname);
    }
}
